{"version":3,"sources":["components/Modal/Modal.js","components/Tabs/Tabs.js","App.js","index.js"],"names":["modalRoot","document","querySelector","Modal","handleKeyDown","e","code","console","log","props","onClose","handleBackdropClick","event","currentTarget","target","window","addEventListener","this","removeEventListener","createPortal","className","onClick","children","Component","App","state","todos","initialTodos","filter","showModal","addTodo","text","todo","id","shortid","generate","completed","setState","prevState","deleteTodo","todoId","formSubmitHandler","data","toggleCompleted","map","changeFilter","value","getVisibleTodos","normalizedFilter","toLowerCase","includes","calculateCompletedTodos","reduce","acc","toggleModal","prevProps","localStorage","setItem","JSON","stringify","getItem","parsedTodos","parse","type","ReactDOM","render","StrictMode","getElementById"],"mappings":"6qBAIMA,EAAYC,SAASC,cAAc,eAEpBC,E,4MAWjBC,cAAgB,SAAAC,GACC,WAAXA,EAAEC,OACJC,QAAQC,IAAI,kKAEZ,EAAKC,MAAMC,Y,EAIfC,oBAAsB,SAAAC,GAEhBA,EAAMC,gBAAkBD,EAAME,QAChC,EAAKL,MAAMC,W,uDArBjB,WACEH,QAAQC,IAAI,2BACZO,OAAOC,iBAAiB,UAAWC,KAAKb,iB,kCAG1C,WACEG,QAAQC,IAAI,8BACZO,OAAOG,oBAAoB,UAAWD,KAAKb,iB,oBAkB7C,WACE,OAAOe,uBACL,qBAAKC,UAAU,kBAAkBC,QAASJ,KAAKN,oBAA/C,SACI,qBAAKS,UAAU,iBAAf,SAAiCH,KAAKR,MAAMa,aAEhDtB,O,GA/B6BuB,a,GCJDA,Y,8BC2KnBC,E,4MAjJXC,MAAQ,CACJC,MAAOC,EACPC,OAAQ,GACRC,WAAW,G,EAmBfC,QAAU,SAAAC,GACNxB,QAAQC,IAAIuB,GACZ,IAAMC,EAAO,CACTC,GAAIC,IAAQC,WACZJ,OACAK,WAAW,GAGf,EAAKC,UAAS,SAAAC,GAAS,MAAK,CACxBZ,MAAM,CAAEM,GAAH,mBAAYM,EAAUZ,a,EAInCa,WAAY,SAACC,GACT,EAAKH,UAAS,SAAAC,GAAS,MAAK,CACxBZ,MAAOY,EAAUZ,MAAME,QAAO,SAAAI,GAAI,OAAIA,EAAKC,KAAKO,U,EAIxDC,kBAAoB,SAAAC,GAChBnC,QAAQC,IAAIkC,I,EAGhBC,gBAAkB,SAAAH,GACdjC,QAAQC,IAAIgC,GAEZ,EAAKH,UAAS,SAAAC,GAAS,MAAI,CACvBZ,MAAOY,EAAUZ,MAAMkB,KAAI,SAAAZ,GACvB,OAAIA,EAAKC,KAAKO,EACH,2BACAR,GADP,IAEII,WAAYJ,EAAKI,YAIlBJ,U,EAKnBa,aAAe,SAAAxC,GACX,EAAKgC,SAAS,CAACT,OAAQvB,EAAEQ,cAAciC,S,EAG3CC,gBAAiB,WACb,MAAwB,EAAKtB,MAAtBG,EAAP,EAAOA,OAAQF,EAAf,EAAeA,MACTsB,EAAkBpB,EAAOqB,cAC/B,OAAOvB,EAAME,QAAO,SAAAI,GAAI,OACpBA,EAAKD,KAAKkB,cAAcC,SAASF,O,EAGzCG,wBAA0B,WAGtB,OAFgB,EAAK1B,MAAdC,MAEM0B,QAAO,SAACC,EAAKrB,GAAN,OAAgBA,EAAKI,UAAYiB,EAAI,EAAIA,IAAM,I,EAGvEC,YAAc,WACV,EAAKjB,UAAS,SAAAZ,GAAK,MAAI,CACnBI,WAAWJ,EAAMI,e,wDA3EzB,SAAmB0B,EAAWjB,GACvBrB,KAAKQ,MAAMC,QAAQY,EAAUZ,QAC5BnB,QAAQC,IAAI,sEACZgD,aAAaC,QAAQ,QAASC,KAAKC,UAAU1C,KAAKQ,MAAMC,W,+BAIhE,WACI,IAAMA,EAAQ8B,aAAaI,QAAQ,SAC7BC,EAAcH,KAAKI,MAAMpC,GAE5BmC,GACC5C,KAAKoB,SAAS,CAACX,MAAOmC,M,oBAoE9B,WACI,MAAmC5C,KAAKQ,MAAlBI,GAAtB,EAAOH,MAAP,EAAcE,OAAd,EAAsBC,WAECZ,KAAKkC,0BAEPlC,KAAK8B,kBAE1B,OACI,qCAGA,wBAAQgB,KAAK,SAAS1C,QAASJ,KAAKqC,YAApC,mGACCzB,GAAa,eAAC,EAAD,CAAOnB,QAASO,KAAKqC,YAArB,UACV,mJACA,0sDAgBA,wBAAQS,KAAK,SAAS1C,QAASJ,KAAKqC,YAApC,kE,GAtHE/B,a,MCnBlByC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjE,SAASkE,eAAe,W","file":"static/js/main.27411104.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport './Modal.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    console.log('Modal componentDidMount');  \r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.log('Modal componentWillUnmount');\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n    handleKeyDown = e => {\r\n      if (e.code === 'Escape') {\r\n        console.log('Нажали ESC, нужно закрыть модалку');\r\n\r\n        this.props.onClose();\r\n      }\r\n    };\r\n\r\n    handleBackdropClick = event => {\r\n\r\n      if (event.currentTarget === event.target) {\r\n        this.props.onClose();\r\n      }\r\n    };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Modal__backdrop\" onClick={this.handleBackdropClick}>\r\n          <div className=\"Modal__content\">{this.props.children}</div>\r\n      </div>,\r\n      modalRoot,\r\n    )    \r\n  }\r\n}\r\n\r\n// onClick={this.handleBackdropClick}","import React, { Component } from 'react';\r\n\r\nexport default class Tabs extends Component {\r\n  state = {\r\n    activeTabIdx: 0,\r\n  };\r\n\r\n  // shouldComponentUpdate(nextProps, nextState) {\r\n  //   return nextState.activeTabIdx !== this.state.activeTabIdx;\r\n  // }\r\n\r\n  setActiveTabIdx = idx => {\r\n    this.setState({ activeTabIdx: idx });\r\n  };\r\n\r\n  render() {\r\n    console.log(`Re-render @ ${Date.now()}`);\r\n\r\n    const { activeTabIdx } = this.state;\r\n    const { items } = this.props;\r\n    const activeTab = items[activeTabIdx];\r\n\r\n    return (\r\n      <>\r\n        <div>\r\n          {items.map((item, idx) => (\r\n            <button\r\n              type=\"button\"\r\n              key={item.label}\r\n              onClick={() => this.setActiveTabIdx(idx)}\r\n            >\r\n              {item.label}\r\n            </button>\r\n          ))}\r\n        </div>\r\n\r\n        <div>\r\n          <h2>{activeTab.label}</h2>\r\n          <p>{activeTab.content}</p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}","import React, {Component} from 'react';\r\n// import Counter from './components/Counter';\r\n// import Dropdown from './components/Dropdown';\r\n// import ColorPicker from './components/ColorPicker';\r\n// import TodoList from './components/TodoList';\r\n// import Form from './components/Form';\r\n// import TodoEditor from './components/TodoEditor/TodoEditor';\r\n// import Filter from './components/TodoList/Filter'\r\nimport Modal from './components/Modal';\r\n// import Clock from './components/Clock';\r\nimport Tabs from './components/Tabs';\r\nimport tabs from './tabs.json';\r\n\r\nimport initialTodos from './todos.json';\r\nimport shortid from 'shortid'\r\n\r\n\r\nconst colorPickerOptions = [\r\n  { label: 'red', color: '#F44336' },\r\n  { label: 'green', color: '#4CAF50' },\r\n  { label: 'blue', color: '#2196F3' },\r\n  { label: 'grey', color: '#607D8B' },\r\n  { label: 'pink', color: '#E91E63' },\r\n  { label: 'indigo', color: '#3F51B5' },\r\n];\r\n\r\nclass App extends Component {\r\n\r\n    state = {  \r\n        todos: initialTodos,\r\n        filter: '',\r\n        showModal: false\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState){\r\n        if(this.state.todos!==prevState.todos){\r\n            console.log(\"обновилось todos\")\r\n            localStorage.setItem('todos', JSON.stringify(this.state.todos))\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const todos = localStorage.getItem('todos');\r\n        const parsedTodos = JSON.parse(todos);\r\n\r\n        if(parsedTodos){\r\n            this.setState({todos: parsedTodos})\r\n        }\r\n    }\r\n\r\n    addTodo = text => {\r\n        console.log(text)\r\n        const todo = {\r\n            id: shortid.generate(),\r\n            text,\r\n            completed: false\r\n        }\r\n\r\n        this.setState(prevState => ({\r\n            todos: [todo, ...prevState.todos]\r\n        }))\r\n    }\r\n\r\n    deleteTodo =(todoId) =>{\r\n        this.setState(prevState => ({\r\n            todos: prevState.todos.filter(todo => todo.id!==todoId ),\r\n        }))\r\n    }\r\n\r\n    formSubmitHandler = data =>{\r\n        console.log(data);\r\n    }\r\n\r\n    toggleCompleted = todoId => {\r\n        console.log(todoId);\r\n\r\n        this.setState(prevState=> ({\r\n            todos: prevState.todos.map(todo => {\r\n                if (todo.id===todoId) {\r\n                    return {\r\n                        ...todo,\r\n                        completed: !todo.completed\r\n                    }\r\n                }\r\n\r\n                return todo;\r\n            })\r\n        }));\r\n    }\r\n\r\n    changeFilter = e => {\r\n        this.setState({filter: e.currentTarget.value})\r\n    }\r\n\r\n    getVisibleTodos =() =>{\r\n        const {filter, todos} = this.state;\r\n        const normalizedFilter= filter.toLowerCase();\r\n        return todos.filter(todo=>\r\n            todo.text.toLowerCase().includes(normalizedFilter));\r\n    }\r\n\r\n    calculateCompletedTodos = () =>{\r\n        const {todos} = this.state\r\n\r\n        return todos.reduce((acc, todo) => (todo.completed ? acc+1 : acc), 0);\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState(state =>({\r\n            showModal:!state.showModal\r\n        }))\r\n    }\r\n\r\n\r\n    render() { \r\n        const {todos, filter, showModal} = this.state;\r\n\r\n        const completedTodos = this.calculateCompletedTodos();\r\n        \r\n        const visibleTodos = this.getVisibleTodos();\r\n\r\n        return (    \r\n            <>\r\n           {/* <Tabs items={tabs}></Tabs> */}\r\n            {/* <Clock></Clock> */}\r\n            <button type=\"button\" onClick={this.toggleModal}>Открыть модалку</button>\r\n            {showModal && <Modal onClose={this.toggleModal}>\r\n                <h1>Контент модалки как children</h1>\r\n                <p>Мені тринадцятий минало;\r\n                    Я пас ягнята за селом.\r\n                    Чи то так сонечко сіяло,\r\n                    Чи так мені чого було –\r\n                    Мені так любо, любо стало,\r\n                    Неначе в Бога…\r\n                    Уже прокликали до паю,\r\n                    А я собі у бур’яні\r\n                    Молюся Богу, і не знаю,\r\n                    Чого маленькому мені\r\n                    Тоді так приязно молилось,\r\n                    Чого так весело було.\r\n                    Господнє небо і село,\r\n                    Ягня, здається, веселилось,\r\n                    І сонце гріло – не пекло.\r\n                </p>\r\n                <button type=\"button\" onClick={this.toggleModal}>Закрыть</button>\r\n                </Modal>}\r\n                {/* <h1>Component`s state</h1>\r\n                \r\n                <Form onSubmit={this.formSubmitHandler}/>\r\n                <Counter initialValue={0}/>\r\n                <Dropdown />\r\n                <ColorPicker options = {colorPickerOptions}/>\r\n                \r\n                <TodoEditor onSubmit={this.addTodo}/>\r\n\r\n                <Filter value={filter} onChange={this.changeFilter}/>\r\n                \r\n                <TodoList \r\n                    todos = {visibleTodos} \r\n                    onDeleteTodo={this.deleteTodo}\r\n                    onToggleCompleted={this.toggleCompleted}\r\n                    />    \r\n\r\n                <div>\r\n                    <p>Общее кол-во: {todos.length}</p>\r\n                   \r\n                    <p>Кол-во выполненных todo: {completedTodos}</p>\r\n                </div> */}\r\n            </> \r\n        );\r\n    }\r\n}\r\n \r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n// import 'modern-normalize/modern-normalize.css';\r\nimport './styles.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}